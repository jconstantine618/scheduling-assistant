{"ast":null,"code":"var _jsxFileName = \"/Users/johnconstantine/Desktop/scheduling-app/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// --- Helper Functions & Initial Data ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hexToRgba = (hex, alpha) => {\n  if (!hex) return `rgba(229, 231, 235, ${alpha})`;\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\nconst COLORS = {\n  'Reservations': '#4A90E2',\n  'Dispatch': '#F5A623',\n  'Journey Desk': '#50E3C2',\n  'Network': '#E04F5F',\n  'Marketing': '#BD10E0',\n  'Security': '#7ED321',\n  'Sales': '#9013FE',\n  'Scheduling': '#F8E71C',\n  'Badges/Projects': '#000000',\n  'Lunch': '#D8D8D8',\n  'PTO': '#9B9B9B',\n  'OFF': '#FFFFFF'\n};\nconst ALL_ABILITIES = ['Reservations', 'Dispatch', 'Journey Desk', 'Network', 'Marketing', 'Security', 'Sales', 'Scheduling', 'Badges/Projects'];\nconst INITIAL_EMPLOYEES = {\n  'Antje': {\n    shift: {\n      start: '07:30',\n      end: '13:30'\n    },\n    hours: 30,\n    lunch: {\n      start: '',\n      end: ''\n    },\n    abilities: ['Journey Desk'],\n    specialistTask: 'Journey Desk',\n    specialistTarget: 30,\n    pto: []\n  },\n  'Adam': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:30',\n      end: '14:00'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Network'],\n    specialistTask: 'Network',\n    specialistTarget: 2,\n    pto: []\n  },\n  'Heather': {\n    shift: {\n      start: '07:00',\n      end: '16:30'\n    },\n    hours: 40,\n    lunch: {\n      start: '11:00',\n      end: '12:30'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Network'],\n    specialistTask: 'Network',\n    specialistTarget: 15,\n    pto: []\n  },\n  'Sheridan': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:00',\n      end: '13:30'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Network'],\n    specialistTask: 'Network',\n    specialistTarget: 5,\n    pto: []\n  },\n  'Katy': {\n    shift: {\n      start: '12:00',\n      end: '21:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '15:00',\n      end: '16:00'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Badges/Projects'],\n    specialistTask: 'Badges/Projects',\n    specialistTarget: 2,\n    pto: []\n  },\n  'SydPo': {\n    shift: {\n      start: '11:30',\n      end: '21:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '16:00',\n      end: '17:30'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Scheduling'],\n    specialistTask: 'Scheduling',\n    specialistTarget: 5,\n    pto: []\n  },\n  'Elliott': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:00',\n      end: '13:30'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Marketing'],\n    specialistTask: 'Marketing',\n    specialistTarget: 2,\n    pto: []\n  },\n  'Brian Adie': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:30',\n      end: '14:00'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Journey Desk'],\n    specialistTask: 'Journey Desk',\n    specialistTarget: 15,\n    pto: []\n  },\n  'Paul': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:30',\n      end: '14:00'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Security'],\n    specialistTask: 'Security',\n    specialistTarget: 25,\n    pto: []\n  },\n  'Shelby': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:30',\n      end: '14:00'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Journey Desk'],\n    specialistTask: 'Journey Desk',\n    specialistTarget: 8,\n    pto: []\n  },\n  'SydMo': {\n    shift: {\n      start: '07:30',\n      end: '17:00'\n    },\n    hours: 40,\n    lunch: {\n      start: '12:00',\n      end: '13:30'\n    },\n    abilities: ['Reservations', 'Dispatch', 'Sales'],\n    specialistTask: 'Sales',\n    specialistTarget: 5,\n    pto: []\n  }\n};\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\nconst TIME_SLOTS = Array.from({\n  length: (22 - 7) * 2\n}, (_, i) => {\n  const h = 7 + Math.floor(i / 2);\n  const m = i % 2 * 30;\n  return `${String(h).padStart(2, '0')}:${String(m).padStart(2, '0')}`;\n});\nconst getInitialMessage = () => [{\n  sender: 'assistant',\n  text: 'Hello! To enable the AI chat, please enter your API key.'\n}];\n\n// --- Child Components ---\n\nconst EmployeeForm = ({\n  employee,\n  employeeName,\n  onUpdate,\n  onRemove\n}) => {\n  _s();\n  const [formData, setFormData] = useState(employee);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const [field, subfield] = name.split('.');\n    if (subfield) {\n      setFormData(prev => ({\n        ...prev,\n        [field]: {\n          ...prev[field],\n          [subfield]: value\n        }\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: type === 'number' ? parseFloat(value) : value\n      }));\n    }\n  };\n  const handleAbilityChange = ability => {\n    const newAbilities = formData.abilities.includes(ability) ? formData.abilities.filter(a => a !== ability) : [...formData.abilities, ability];\n    setFormData(prev => ({\n      ...prev,\n      abilities: newAbilities\n    }));\n  };\n  const handleUpdate = () => {\n    onUpdate(employeeName, formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded-lg bg-white mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"font-bold text-lg mb-2\",\n      children: employeeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"hours\",\n        value: formData.hours,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Weekly Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"specialistTask\",\n        value: formData.specialistTask,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Specialist Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"shift.start\",\n        value: formData.shift.start,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Shift Start (HH:MM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"shift.end\",\n        value: formData.shift.end,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Shift End (HH:MM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lunch.start\",\n        value: formData.lunch.start,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Lunch Start (HH:MM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lunch.end\",\n        value: formData.lunch.end,\n        onChange: handleChange,\n        className: \"p-2 border rounded\",\n        placeholder: \"Lunch End (HH:MM)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-semibold mb-2 text-sm\",\n        children: \"Abilities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2 text-xs\",\n        children: ALL_ABILITIES.map(ability => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.abilities.includes(ability),\n            onChange: () => handleAbilityChange(ability)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, ability, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        className: \"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(employeeName),\n        className: \"w-full bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n// --- Main App Component ---\n_s(EmployeeForm, \"e/ZAYvSjL7S0YggY6Z1CS2lAHJQ=\");\n_c = EmployeeForm;\nexport default function App() {\n  _s2();\n  const [employees, setEmployees] = useState(INITIAL_EMPLOYEES);\n  const [schedule, setSchedule] = useState(null);\n  const [chatHistory, setChatHistory] = useState(getInitialMessage());\n  const [userInput, setUserInput] = useState('');\n  const [activeView, setActiveView] = useState('chat');\n  const [apiKey, setApiKey] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n  const fileInputRef = React.useRef(null);\n  const addMessage = (sender, text) => {\n    setChatHistory(prev => [...prev, {\n      sender,\n      text\n    }]);\n  };\n  const generateSchedule = useCallback(() => {\n    const newSchedule = {};\n    DAYS.forEach(day => {\n      newSchedule[day] = {};\n      Object.keys(employees).forEach(name => {\n        newSchedule[day][name] = Array(TIME_SLOTS.length).fill('OFF');\n        const emp = employees[name];\n        if (emp.pto.some(p => p.day === day)) {\n          newSchedule[day][name].fill('PTO');\n          return;\n        }\n        TIME_SLOTS.forEach((time, i) => {\n          if (time >= emp.shift.start && time < emp.shift.end) {\n            newSchedule[day][name][i] = emp.specialistTask || 'Reservations';\n          }\n          if (emp.lunch && emp.lunch.start && time >= emp.lunch.start && time < emp.lunch.end) {\n            newSchedule[day][name][i] = 'Lunch';\n          }\n        });\n      });\n      TIME_SLOTS.forEach((time, i) => {\n        let resTarget = time >= '08:00' && time < '17:00' ? 3 : time >= '17:00' && time < '21:00' ? 1 : 0;\n        let dispTarget = time >= '08:00' && time < '21:00' ? 1 : 0;\n        if (!resTarget && !dispTarget) return;\n        let assigned = Object.keys(employees).filter(name => newSchedule[day][name][i] !== 'OFF' && newSchedule[day][name][i] !== 'Lunch' && newSchedule[day][name][i] !== 'PTO');\n        let resCount = assigned.filter(name => newSchedule[day][name][i] === 'Reservations').length;\n        let dispCount = assigned.filter(name => newSchedule[day][name][i] === 'Dispatch').length;\n        assigned.forEach(name => {\n          const emp = employees[name];\n          const isSpecialist = emp.specialistTask && emp.specialistTask.length > 0;\n          if (isSpecialist) return;\n          if (emp.abilities.includes('Dispatch') && dispCount < dispTarget) {\n            if (newSchedule[day][name][i] !== 'Dispatch') {\n              if (newSchedule[day][name][i] === 'Reservations') resCount--;\n              newSchedule[day][name][i] = 'Dispatch';\n              dispCount++;\n            }\n          } else if (emp.abilities.includes('Reservations') && resCount < resTarget) {\n            if (newSchedule[day][name][i] !== 'Reservations') {\n              if (newSchedule[day][name][i] === 'Dispatch') dispCount--;\n              newSchedule[day][name][i] = 'Reservations';\n              resCount++;\n            }\n          }\n        });\n      });\n    });\n    setSchedule(newSchedule);\n  }, [employees]);\n  useEffect(() => {\n    generateSchedule();\n  }, []);\n  const handlePtoUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    if (!apiKey) {\n      addMessage('assistant', 'Please enter an API key to process the PTO file.');\n      return;\n    }\n    addMessage('assistant', 'Processing PTO file with AI. This may take a moment...');\n    setIsThinking(true);\n    const reader = new FileReader();\n    reader.onloadend = async () => {\n      const base64ImageData = reader.result.split(',')[1];\n      const systemInstruction = `You are an expert at reading schedules from calendar images. Analyze the provided image. Extract the names of the people who have PTO (Paid Time Off) and the specific weekdays they have off. Return the data as a clean JSON object. The format should be a dictionary where keys are employee full names (e.g., \"Brian Adie\") and values are an array of strings representing the day of the week they have off (e.g., [\"Monday\", \"Tuesday\"]).\n\nExample Output for an image showing Brian Adie with PTO on Mon & Tue, and SydPo with PTO on Wed:\n{\n  \"Brian Adie\": [\"Monday\", \"Tuesday\"],\n  \"SydPo\": [\"Wednesday\"]\n}\n\nIMPORTANT: Only include employees with PTO. If an employee has a full week of PTO, list all five weekdays: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]. Use the full names from the provided employee list for matching. Do not invent data.\nEmployee List for name matching: ${Object.keys(employees).join(', ')}\n`;\n      const payload = {\n        contents: [{\n          role: \"user\",\n          parts: [{\n            text: systemInstruction\n          }, {\n            inlineData: {\n              mimeType: file.type,\n              data: base64ImageData\n            }\n          }]\n        }]\n      };\n      try {\n        const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!response.ok) {\n          const errorBody = await response.json();\n          throw new Error(`API Error: ${response.status} ${response.statusText}. Details: ${JSON.stringify(errorBody)}`);\n        }\n        const result = await response.json();\n        if (result.candidates && result.candidates.length > 0 && result.candidates[0].content && result.candidates[0].content.parts && result.candidates[0].content.parts.length > 0) {\n          let jsonText = result.candidates[0].content.parts[0].text;\n          jsonText = jsonText.substring(jsonText.indexOf('{'), jsonText.lastIndexOf('}') + 1);\n          const ptoData = JSON.parse(jsonText);\n          const updatedEmployees = {\n            ...employees\n          };\n          let updatedNames = [];\n          Object.keys(ptoData).forEach(name => {\n            if (updatedEmployees[name]) {\n              const validDays = ptoData[name].filter(day => DAYS.includes(day));\n              updatedEmployees[name].pto = validDays.map(day => ({\n                day\n              }));\n              if (validDays.length > 0) {\n                updatedNames.push(name);\n              }\n            }\n          });\n          setEmployees(updatedEmployees);\n          if (updatedNames.length > 0) {\n            addMessage('assistant', `Successfully processed PTO for: ${updatedNames.join(', ')}. The schedule has been updated.`);\n          } else {\n            addMessage('assistant', 'AI processed the file, but could not find any valid PTO entries matching the employee list.');\n          }\n        } else {\n          throw new Error(\"Invalid response structure from API when processing PTO.\");\n        }\n      } catch (error) {\n        console.error(error);\n        addMessage('assistant', `Sorry, there was an error processing the PTO file. Please ensure it's a clear image and check the console for details. Error: ${error.message}`);\n      } finally {\n        setIsThinking(false);\n        if (fileInputRef.current) {\n          fileInputRef.current.value = \"\";\n        }\n      }\n    };\n    reader.readAsDataURL(file);\n  };\n\n  // UPDATED: Now handles AI responses that are actions.\n  const handleUserInput = async () => {\n    if (!userInput.trim() || isThinking) return;\n    if (!apiKey) {\n      addMessage('assistant', 'Please enter an API key to use the AI chat.');\n      return;\n    }\n    const newHistory = [...chatHistory, {\n      sender: 'user',\n      text: userInput\n    }];\n    setChatHistory(newHistory);\n    setIsThinking(true);\n    setUserInput('');\n    const systemInstruction = `You are an expert scheduling assistant integrated into a React application. Your task is to analyze a user's request based on ALL the provided data.\n\n- If the user is asking a question or the request requires clarification, respond with a helpful text answer.\n- If the user confirms a change (e.g., \"yes, make that change\", \"confirmed\"), you MUST respond with a specific JSON object representing the action to take. Do NOT add any explanatory text outside of the JSON object.\n\nThe JSON object must have two keys: \"action\" and \"data\".\n\nPossible actions are:\n1.  \\`update_schedule\\`: When the entire schedule grid needs to be changed. The \\`data\\` should be the complete new schedule object, matching the structure of the input schedule.\n2.  \\`update_pto\\`: When only an employee's PTO needs to be changed. The \\`data\\` should be an object like \\`{\"employeeName\": \"Brian Adie\", \"ptoDays\": [\"Tuesday\"]}\\`.\n\nExample of a valid JSON response for a confirmed change:\n{\n  \"action\": \"update_pto\",\n  \"data\": {\n    \"employeeName\": \"Brian Adie\",\n    \"ptoDays\": [\"Tuesday\"]\n  }\n}\n\nDATA CONTEXT:\n1.  Employee Profiles (includes abilities, shifts, and PTO): \n    ${JSON.stringify(employees, null, 2)}\n2.  The Current Full Schedule:\n    ${JSON.stringify(schedule, null, 2)}\n\nIMPORTANT: Your memory is the chat history below. Refer to previous messages to understand the full context of the user's request.`;\n    const apiHistory = newHistory.map(msg => ({\n      role: msg.sender === 'assistant' ? 'model' : 'user',\n      parts: [{\n        text: msg.text\n      }]\n    }));\n    try {\n      const payload = {\n        contents: [{\n          role: 'user',\n          parts: [{\n            text: systemInstruction\n          }]\n        }, {\n          role: 'model',\n          parts: [{\n            text: \"Understood. I will respond with a text explanation or a JSON action object.\"\n          }]\n        }, ...apiHistory]\n      };\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorBody = await response.json();\n        throw new Error(`API Error: ${response.status} ${response.statusText}. Details: ${JSON.stringify(errorBody)}`);\n      }\n      const result = await response.json();\n      const textResponse = result.candidates[0].content.parts[0].text;\n      try {\n        // Check if the response is an \"action\" JSON\n        const cleanedText = textResponse.substring(textResponse.indexOf('{'), textResponse.lastIndexOf('}') + 1);\n        const responseObject = JSON.parse(cleanedText);\n        if (responseObject.action && responseObject.data) {\n          switch (responseObject.action) {\n            case 'update_pto':\n              {\n                const {\n                  employeeName,\n                  ptoDays\n                } = responseObject.data;\n                const updatedEmployees = {\n                  ...employees\n                };\n                if (updatedEmployees[employeeName]) {\n                  updatedEmployees[employeeName].pto = ptoDays.map(day => ({\n                    day\n                  }));\n                  setEmployees(updatedEmployees);\n                  addMessage('assistant', 'I have updated the schedule as requested.');\n                } else {\n                  addMessage('assistant', `Error: Could not find employee '${employeeName}' to update PTO.`);\n                }\n                break;\n              }\n            case 'update_schedule':\n              {\n                setSchedule(responseObject.data);\n                addMessage('assistant', 'I have updated the schedule as requested.');\n                break;\n              }\n            default:\n              addMessage('assistant', `I received an action I don't understand: ${responseObject.action}`);\n          }\n        } else {\n          // It's a JSON object, but not an action, so just display it\n          addMessage('assistant', textResponse);\n        }\n      } catch (e) {\n        // It's not a JSON object, just a regular text response\n        addMessage('assistant', textResponse);\n      }\n    } catch (error) {\n      console.error(error);\n      addMessage('assistant', `Sorry, there was an error connecting to the AI. Please check your API key and the console for details. Error: ${error.message}`);\n    } finally {\n      setIsThinking(false);\n    }\n  };\n  const handleResetChat = () => {\n    setChatHistory(getInitialMessage());\n  };\n  const handleUpdateEmployee = (name, updatedData) => {\n    setEmployees(prev => ({\n      ...prev,\n      [name]: updatedData\n    }));\n    addMessage('assistant', `Updated settings for ${name}. Regenerating schedule.`);\n  };\n  const handleRemoveEmployee = name => {\n    setEmployees(prev => {\n      const newState = {\n        ...prev\n      };\n      delete newState[name];\n      return newState;\n    });\n    addMessage('assistant', `Removed ${name}. Regenerating schedule.`);\n  };\n  const handleAddEmployee = () => {\n    const newName = `New Employee ${Object.keys(employees).length + 1}`;\n    setEmployees(prev => ({\n      ...prev,\n      [newName]: {\n        shift: {\n          start: '09:00',\n          end: '17:00'\n        },\n        hours: 40,\n        lunch: {\n          start: '12:00',\n          end: '13:00'\n        },\n        abilities: ['Reservations'],\n        specialistTask: '',\n        specialistTarget: 0,\n        pto: []\n      }\n    }));\n    addMessage('assistant', `Added ${newName}. Please update their details.`);\n  };\n  useEffect(() => {\n    generateSchedule();\n  }, [employees, generateSchedule]);\n  const renderScheduleGrid = day => {\n    if (!schedule || !schedule[day]) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-center\",\n      children: \"Generating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 49\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto shadow-md rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full border-collapse\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"sticky left-0 bg-gray-200 z-10 p-2 border-r text-left w-40\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 53\n            }, this), TIME_SLOTS.map(t => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-1 border-b border-gray-300 text-xs w-20 font-normal\",\n              children: t\n            }, t, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 162\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(employees).sort().map(name => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"[&:nth-child(even)]:bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"sticky left-0 bg-white [&:nth-child(even)]:bg-gray-50 z-10 p-2 border-r font-medium text-sm whitespace-nowrap\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 33\n            }, this), schedule[day][name].map((task, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                backgroundColor: hexToRgba(COLORS[task], 0.8),\n                color: ['Badges/Projects', 'PTO'].includes(task) ? 'white' : 'black',\n                border: `1px solid ${hexToRgba(COLORS[task], 0.5)}`\n              },\n              className: \"text-center text-xs p-1 font-semibold\",\n              children: task !== schedule[day][name][i - 1] ? task.replace(/s$/, '') : ''\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 37\n            }, this))]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-100 font-sans\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/3 max-w-md flex flex-col h-full border-r bg-white shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-gray-800\",\n          children: \"Scheduling Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mt-2 border border-gray-300 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveView('chat'),\n            className: `w-1/2 p-2 rounded-l-lg ${activeView === 'chat' ? 'bg-blue-600 text-white' : 'bg-white hover:bg-gray-200'}`,\n            children: \"Chat & Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveView('employees'),\n            className: `w-1/2 p-2 rounded-r-lg ${activeView === 'employees' ? 'bg-blue-600 text-white' : 'bg-white hover:bg-gray-200'}`,\n            children: \"Manage Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this), activeView === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"api-key\",\n            className: \"text-sm font-medium text-gray-700\",\n            children: \"Gemini API Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"api-key\",\n            type: \"password\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value),\n            className: \"w-full p-2 mt-1 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",\n            placeholder: \"Enter your API key here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fileInputRef.current.click(),\n            className: \"w-1/2 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg\",\n            children: \"Upload PTO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: fileInputRef,\n            onChange: handlePtoUpload,\n            accept: \"image/*\",\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetChat,\n            className: \"w-1/2 bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg\",\n            children: \"Reset Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow p-4 overflow-y-auto bg-gray-50\",\n          children: [chatHistory.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-4 flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `max-w-xs p-3 rounded-2xl ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-white border'}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm\",\n                dangerouslySetInnerHTML: {\n                  __html: msg.text.replace(/\\n/g, '<br />')\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 324\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 208\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 112\n          }, this)), \" \", isThinking && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex justify-start\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-w-xs p-3 rounded-2xl bg-white border\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-500 animate-pulse\",\n                children: \"Assistant is thinking...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 552\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 494\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 453\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-t bg-white flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput,\n            onChange: e => setUserInput(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleUserInput(),\n            className: \"flex-grow p-2 border rounded-l-lg\",\n            placeholder: \"Type request...\",\n            disabled: isThinking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUserInput,\n            className: \"bg-blue-600 text-white p-2 rounded-r-lg\",\n            disabled: isThinking,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 308\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }, this), activeView === 'employees' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 border-b\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddEmployee,\n            className: \"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg\",\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow p-4 overflow-y-auto bg-gray-50\",\n          children: Object.entries(employees).map(([name, data]) => /*#__PURE__*/_jsxDEV(EmployeeForm, {\n            employeeName: name,\n            employee: data,\n            onUpdate: handleUpdateEmployee,\n            onRemove: handleRemoveEmployee\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow flex flex-col h-full overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-b bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-700\",\n          children: \"Weekly Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow overflow-auto p-4 bg-gray-100\",\n        children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold mb-2 text-gray-800\",\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 123\n          }, this), renderScheduleGrid(day)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 91\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 9\n  }, this);\n}\n_s2(App, \"0Tv1AX8Wd7g37LhKumetPdiXHXw=\");\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmployeeForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","hexToRgba","hex","alpha","r","parseInt","slice","g","b","COLORS","ALL_ABILITIES","INITIAL_EMPLOYEES","shift","start","end","hours","lunch","abilities","specialistTask","specialistTarget","pto","DAYS","TIME_SLOTS","Array","from","length","_","i","h","Math","floor","m","String","padStart","getInitialMessage","sender","text","EmployeeForm","employee","employeeName","onUpdate","onRemove","_s","formData","setFormData","handleChange","e","name","value","type","target","field","subfield","split","prev","parseFloat","handleAbilityChange","ability","newAbilities","includes","filter","a","handleUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","map","checked","onClick","_c","App","_s2","employees","setEmployees","schedule","setSchedule","chatHistory","setChatHistory","userInput","setUserInput","activeView","setActiveView","apiKey","setApiKey","isThinking","setIsThinking","fileInputRef","useRef","addMessage","generateSchedule","newSchedule","forEach","day","Object","keys","fill","emp","some","p","time","resTarget","dispTarget","assigned","resCount","dispCount","isSpecialist","handlePtoUpload","event","file","files","reader","FileReader","onloadend","base64ImageData","result","systemInstruction","join","payload","contents","role","parts","inlineData","mimeType","data","response","fetch","method","headers","body","JSON","stringify","ok","errorBody","json","Error","status","statusText","candidates","content","jsonText","substring","indexOf","lastIndexOf","ptoData","parse","updatedEmployees","updatedNames","validDays","push","error","console","message","current","readAsDataURL","handleUserInput","trim","newHistory","apiHistory","msg","textResponse","cleanedText","responseObject","action","ptoDays","handleResetChat","handleUpdateEmployee","updatedData","handleRemoveEmployee","newState","handleAddEmployee","newName","renderScheduleGrid","t","sort","task","style","backgroundColor","color","border","replace","htmlFor","id","click","ref","accept","dangerouslySetInnerHTML","__html","onKeyPress","key","disabled","entries","_c2","$RefreshReg$"],"sources":["/Users/johnconstantine/Desktop/scheduling-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// --- Helper Functions & Initial Data ---\n\nconst hexToRgba = (hex, alpha) => {\n    if (!hex) return `rgba(229, 231, 235, ${alpha})`;\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n\nconst COLORS = {\n    'Reservations': '#4A90E2', 'Dispatch': '#F5A623', 'Journey Desk': '#50E3C2',\n    'Network': '#E04F5F', 'Marketing': '#BD10E0', 'Security': '#7ED321', 'Sales': '#9013FE',\n    'Scheduling': '#F8E71C', 'Badges/Projects': '#000000', 'Lunch': '#D8D8D8',\n    'PTO': '#9B9B9B', 'OFF': '#FFFFFF'\n};\n\nconst ALL_ABILITIES = [\n    'Reservations', 'Dispatch', 'Journey Desk', 'Network', \n    'Marketing', 'Security', 'Sales', 'Scheduling', 'Badges/Projects'\n];\n\nconst INITIAL_EMPLOYEES = {\n    'Antje': { shift: { start: '07:30', end: '13:30' }, hours: 30, lunch: { start: '', end: '' }, abilities: ['Journey Desk'], specialistTask: 'Journey Desk', specialistTarget: 30, pto: [] },\n    'Adam': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:30', end: '14:00' }, abilities: ['Reservations', 'Dispatch', 'Network'], specialistTask: 'Network', specialistTarget: 2, pto: [] },\n    'Heather': { shift: { start: '07:00', end: '16:30' }, hours: 40, lunch: { start: '11:00', end: '12:30' }, abilities: ['Reservations', 'Dispatch', 'Network'], specialistTask: 'Network', specialistTarget: 15, pto: [] },\n    'Sheridan': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:00', end: '13:30' }, abilities: ['Reservations', 'Dispatch', 'Network'], specialistTask: 'Network', specialistTarget: 5, pto: [] },\n    'Katy': { shift: { start: '12:00', end: '21:00' }, hours: 40, lunch: { start: '15:00', end: '16:00' }, abilities: ['Reservations', 'Dispatch', 'Badges/Projects'], specialistTask: 'Badges/Projects', specialistTarget: 2, pto: [] },\n    'SydPo': { shift: { start: '11:30', end: '21:00' }, hours: 40, lunch: { start: '16:00', end: '17:30' }, abilities: ['Reservations', 'Dispatch', 'Scheduling'], specialistTask: 'Scheduling', specialistTarget: 5, pto: [] },\n    'Elliott': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:00', end: '13:30' }, abilities: ['Reservations', 'Dispatch', 'Marketing'], specialistTask: 'Marketing', specialistTarget: 2, pto: [] },\n    'Brian Adie': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:30', end: '14:00' }, abilities: ['Reservations', 'Dispatch', 'Journey Desk'], specialistTask: 'Journey Desk', specialistTarget: 15, pto: [] },\n    'Paul': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:30', end: '14:00' }, abilities: ['Reservations', 'Dispatch', 'Security'], specialistTask: 'Security', specialistTarget: 25, pto: [] },\n    'Shelby': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:30', end: '14:00' }, abilities: ['Reservations', 'Dispatch', 'Journey Desk'], specialistTask: 'Journey Desk', specialistTarget: 8, pto: [] },\n    'SydMo': { shift: { start: '07:30', end: '17:00' }, hours: 40, lunch: { start: '12:00', end: '13:30' }, abilities: ['Reservations', 'Dispatch', 'Sales'], specialistTask: 'Sales', specialistTarget: 5, pto: [] },\n};\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\nconst TIME_SLOTS = Array.from({ length: (22 - 7) * 2 }, (_, i) => {\n    const h = 7 + Math.floor(i / 2);\n    const m = (i % 2) * 30;\n    return `${String(h).padStart(2, '0')}:${String(m).padStart(2, '0')}`;\n});\n\nconst getInitialMessage = () => ([{ sender: 'assistant', text: 'Hello! To enable the AI chat, please enter your API key.' }]);\n\n\n// --- Child Components ---\n\nconst EmployeeForm = ({ employee, employeeName, onUpdate, onRemove }) => {\n    const [formData, setFormData] = useState(employee);\n\n    const handleChange = (e) => {\n        const { name, value, type } = e.target;\n        const [field, subfield] = name.split('.');\n        \n        if (subfield) {\n            setFormData(prev => ({ ...prev, [field]: { ...prev[field], [subfield]: value } }));\n        } else {\n            setFormData(prev => ({ ...prev, [name]: type === 'number' ? parseFloat(value) : value }));\n        }\n    };\n\n    const handleAbilityChange = (ability) => {\n        const newAbilities = formData.abilities.includes(ability)\n            ? formData.abilities.filter(a => a !== ability)\n            : [...formData.abilities, ability];\n        setFormData(prev => ({ ...prev, abilities: newAbilities }));\n    };\n\n    const handleUpdate = () => {\n        onUpdate(employeeName, formData);\n    };\n\n    return (\n        <div className=\"p-4 border rounded-lg bg-white mb-4\">\n            <h4 className=\"font-bold text-lg mb-2\">{employeeName}</h4>\n            <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <input type=\"number\" name=\"hours\" value={formData.hours} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Weekly Hours\" />\n                <input type=\"text\" name=\"specialistTask\" value={formData.specialistTask} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Specialist Task\" />\n                <input type=\"text\" name=\"shift.start\" value={formData.shift.start} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Shift Start (HH:MM)\" />\n                <input type=\"text\" name=\"shift.end\" value={formData.shift.end} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Shift End (HH:MM)\" />\n                <input type=\"text\" name=\"lunch.start\" value={formData.lunch.start} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Lunch Start (HH:MM)\" />\n                <input type=\"text\" name=\"lunch.end\" value={formData.lunch.end} onChange={handleChange} className=\"p-2 border rounded\" placeholder=\"Lunch End (HH:MM)\" />\n            </div>\n            <div className=\"mt-4\">\n                <h5 className=\"font-semibold mb-2 text-sm\">Abilities</h5>\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                    {ALL_ABILITIES.map(ability => (\n                        <label key={ability} className=\"flex items-center space-x-2\">\n                            <input type=\"checkbox\" checked={formData.abilities.includes(ability)} onChange={() => handleAbilityChange(ability)} />\n                            <span>{ability}</span>\n                        </label>\n                    ))}\n                </div>\n            </div>\n            <div className=\"mt-4 flex space-x-2\">\n                <button onClick={handleUpdate} className=\"w-full bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg\">Update</button>\n                <button onClick={() => onRemove(employeeName)} className=\"w-full bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg\">Remove</button>\n            </div>\n        </div>\n    );\n};\n\n\n// --- Main App Component ---\n\nexport default function App() {\n    const [employees, setEmployees] = useState(INITIAL_EMPLOYEES);\n    const [schedule, setSchedule] = useState(null);\n    const [chatHistory, setChatHistory] = useState(getInitialMessage());\n    const [userInput, setUserInput] = useState('');\n    const [activeView, setActiveView] = useState('chat');\n    const [apiKey, setApiKey] = useState('');\n    const [isThinking, setIsThinking] = useState(false);\n    const fileInputRef = React.useRef(null);\n\n    const addMessage = (sender, text) => {\n        setChatHistory(prev => [...prev, { sender, text }]);\n    };\n    \n    const generateSchedule = useCallback(() => {\n        const newSchedule = {};\n        DAYS.forEach(day => {\n            newSchedule[day] = {};\n            Object.keys(employees).forEach(name => {\n                newSchedule[day][name] = Array(TIME_SLOTS.length).fill('OFF');\n                const emp = employees[name];\n                if (emp.pto.some(p => p.day === day)) {\n                    newSchedule[day][name].fill('PTO');\n                    return;\n                }\n                TIME_SLOTS.forEach((time, i) => {\n                   if (time >= emp.shift.start && time < emp.shift.end) {\n                       newSchedule[day][name][i] = emp.specialistTask || 'Reservations';\n                   }\n                   if (emp.lunch && emp.lunch.start && time >= emp.lunch.start && time < emp.lunch.end) {\n                       newSchedule[day][name][i] = 'Lunch';\n                   }\n                });\n            });\n            TIME_SLOTS.forEach((time, i) => {\n                let resTarget = (time >= '08:00' && time < '17:00') ? 3 : (time >= '17:00' && time < '21:00') ? 1 : 0;\n                let dispTarget = (time >= '08:00' && time < '21:00') ? 1 : 0;\n                if (!resTarget && !dispTarget) return;\n\n                let assigned = Object.keys(employees).filter(name => newSchedule[day][name][i] !== 'OFF' && newSchedule[day][name][i] !== 'Lunch' && newSchedule[day][name][i] !== 'PTO');\n                let resCount = assigned.filter(name => newSchedule[day][name][i] === 'Reservations').length;\n                let dispCount = assigned.filter(name => newSchedule[day][name][i] === 'Dispatch').length;\n\n                assigned.forEach(name => {\n                    const emp = employees[name];\n                    const isSpecialist = emp.specialistTask && emp.specialistTask.length > 0;\n                    if (isSpecialist) return;\n\n                    if (emp.abilities.includes('Dispatch') && dispCount < dispTarget) {\n                        if (newSchedule[day][name][i] !== 'Dispatch') {\n                            if (newSchedule[day][name][i] === 'Reservations') resCount--;\n                            newSchedule[day][name][i] = 'Dispatch';\n                            dispCount++;\n                        }\n                    } else if (emp.abilities.includes('Reservations') && resCount < resTarget) {\n                        if (newSchedule[day][name][i] !== 'Reservations') {\n                           if (newSchedule[day][name][i] === 'Dispatch') dispCount--;\n                            newSchedule[day][name][i] = 'Reservations';\n                            resCount++;\n                        }\n                    }\n                });\n            });\n        });\n        setSchedule(newSchedule);\n    }, [employees]);\n\n    useEffect(() => {\n        generateSchedule();\n    }, []);\n\n    const handlePtoUpload = (event) => {\n        const file = event.target.files[0];\n        if (!file) return;\n        if (!apiKey) {\n            addMessage('assistant', 'Please enter an API key to process the PTO file.');\n            return;\n        }\n    \n        addMessage('assistant', 'Processing PTO file with AI. This may take a moment...');\n        setIsThinking(true);\n    \n        const reader = new FileReader();\n        reader.onloadend = async () => {\n            const base64ImageData = reader.result.split(',')[1];\n    \n            const systemInstruction = `You are an expert at reading schedules from calendar images. Analyze the provided image. Extract the names of the people who have PTO (Paid Time Off) and the specific weekdays they have off. Return the data as a clean JSON object. The format should be a dictionary where keys are employee full names (e.g., \"Brian Adie\") and values are an array of strings representing the day of the week they have off (e.g., [\"Monday\", \"Tuesday\"]).\n\nExample Output for an image showing Brian Adie with PTO on Mon & Tue, and SydPo with PTO on Wed:\n{\n  \"Brian Adie\": [\"Monday\", \"Tuesday\"],\n  \"SydPo\": [\"Wednesday\"]\n}\n\nIMPORTANT: Only include employees with PTO. If an employee has a full week of PTO, list all five weekdays: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]. Use the full names from the provided employee list for matching. Do not invent data.\nEmployee List for name matching: ${Object.keys(employees).join(', ')}\n`;\n    \n            const payload = {\n                contents: [\n                    {\n                        role: \"user\",\n                        parts: [\n                            { text: systemInstruction },\n                            {\n                                inlineData: {\n                                    mimeType: file.type,\n                                    data: base64ImageData\n                                }\n                            }\n                        ]\n                    }\n                ],\n            };\n    \n            try {\n                const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(payload)\n                });\n    \n                if (!response.ok) {\n                     const errorBody = await response.json();\n                     throw new Error(`API Error: ${response.status} ${response.statusText}. Details: ${JSON.stringify(errorBody)}`);\n                }\n    \n                const result = await response.json();\n    \n                if (result.candidates && result.candidates.length > 0 &&\n                    result.candidates[0].content && result.candidates[0].content.parts &&\n                    result.candidates[0].content.parts.length > 0) {\n                  \n                  let jsonText = result.candidates[0].content.parts[0].text;\n                  jsonText = jsonText.substring(jsonText.indexOf('{'), jsonText.lastIndexOf('}') + 1);\n    \n                  const ptoData = JSON.parse(jsonText);\n                  \n                  const updatedEmployees = { ...employees };\n                  let updatedNames = [];\n    \n                  Object.keys(ptoData).forEach(name => {\n                      if (updatedEmployees[name]) {\n                          const validDays = ptoData[name].filter(day => DAYS.includes(day));\n                          updatedEmployees[name].pto = validDays.map(day => ({ day }));\n                          if (validDays.length > 0) {\n                            updatedNames.push(name);\n                          }\n                      }\n                  });\n    \n                  setEmployees(updatedEmployees);\n                  if (updatedNames.length > 0) {\n                    addMessage('assistant', `Successfully processed PTO for: ${updatedNames.join(', ')}. The schedule has been updated.`);\n                  } else {\n                    addMessage('assistant', 'AI processed the file, but could not find any valid PTO entries matching the employee list.');\n                  }\n    \n                } else {\n                   throw new Error(\"Invalid response structure from API when processing PTO.\");\n                }\n    \n            } catch (error) {\n                console.error(error);\n                addMessage('assistant', `Sorry, there was an error processing the PTO file. Please ensure it's a clear image and check the console for details. Error: ${error.message}`);\n            } finally {\n                setIsThinking(false);\n                if(fileInputRef.current) {\n                    fileInputRef.current.value = \"\";\n                }\n            }\n        };\n        reader.readAsDataURL(file);\n    };\n\n    // UPDATED: Now handles AI responses that are actions.\n    const handleUserInput = async () => {\n        if (!userInput.trim() || isThinking) return;\n        if (!apiKey) {\n            addMessage('assistant', 'Please enter an API key to use the AI chat.');\n            return;\n        }\n\n        const newHistory = [...chatHistory, { sender: 'user', text: userInput }];\n        setChatHistory(newHistory);\n        setIsThinking(true);\n        setUserInput('');\n        \n        const systemInstruction = `You are an expert scheduling assistant integrated into a React application. Your task is to analyze a user's request based on ALL the provided data.\n\n- If the user is asking a question or the request requires clarification, respond with a helpful text answer.\n- If the user confirms a change (e.g., \"yes, make that change\", \"confirmed\"), you MUST respond with a specific JSON object representing the action to take. Do NOT add any explanatory text outside of the JSON object.\n\nThe JSON object must have two keys: \"action\" and \"data\".\n\nPossible actions are:\n1.  \\`update_schedule\\`: When the entire schedule grid needs to be changed. The \\`data\\` should be the complete new schedule object, matching the structure of the input schedule.\n2.  \\`update_pto\\`: When only an employee's PTO needs to be changed. The \\`data\\` should be an object like \\`{\"employeeName\": \"Brian Adie\", \"ptoDays\": [\"Tuesday\"]}\\`.\n\nExample of a valid JSON response for a confirmed change:\n{\n  \"action\": \"update_pto\",\n  \"data\": {\n    \"employeeName\": \"Brian Adie\",\n    \"ptoDays\": [\"Tuesday\"]\n  }\n}\n\nDATA CONTEXT:\n1.  Employee Profiles (includes abilities, shifts, and PTO): \n    ${JSON.stringify(employees, null, 2)}\n2.  The Current Full Schedule:\n    ${JSON.stringify(schedule, null, 2)}\n\nIMPORTANT: Your memory is the chat history below. Refer to previous messages to understand the full context of the user's request.`;\n\n        const apiHistory = newHistory.map(msg => ({\n            role: msg.sender === 'assistant' ? 'model' : 'user',\n            parts: [{ text: msg.text }]\n        }));\n\n        try {\n            const payload = {\n                contents: [\n                    { role: 'user', parts: [{ text: systemInstruction }] },\n                    { role: 'model', parts: [{ text: \"Understood. I will respond with a text explanation or a JSON action object.\" }] },\n                    ...apiHistory\n                ],\n            };\n            \n            const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(payload)\n            });\n\n            if (!response.ok) {\n                 const errorBody = await response.json();\n                 throw new Error(`API Error: ${response.status} ${response.statusText}. Details: ${JSON.stringify(errorBody)}`);\n            }\n\n            const result = await response.json();\n            const textResponse = result.candidates[0].content.parts[0].text;\n            \n            try {\n                // Check if the response is an \"action\" JSON\n                const cleanedText = textResponse.substring(textResponse.indexOf('{'), textResponse.lastIndexOf('}') + 1);\n                const responseObject = JSON.parse(cleanedText);\n\n                if (responseObject.action && responseObject.data) {\n                    switch (responseObject.action) {\n                        case 'update_pto': {\n                            const { employeeName, ptoDays } = responseObject.data;\n                            const updatedEmployees = { ...employees };\n                            if (updatedEmployees[employeeName]) {\n                                updatedEmployees[employeeName].pto = ptoDays.map(day => ({ day }));\n                                setEmployees(updatedEmployees);\n                                addMessage('assistant', 'I have updated the schedule as requested.');\n                            } else {\n                                addMessage('assistant', `Error: Could not find employee '${employeeName}' to update PTO.`);\n                            }\n                            break;\n                        }\n                        case 'update_schedule': {\n                             setSchedule(responseObject.data);\n                             addMessage('assistant', 'I have updated the schedule as requested.');\n                             break;\n                        }\n                        default:\n                            addMessage('assistant', `I received an action I don't understand: ${responseObject.action}`);\n                    }\n                } else {\n                    // It's a JSON object, but not an action, so just display it\n                    addMessage('assistant', textResponse);\n                }\n            } catch (e) {\n                // It's not a JSON object, just a regular text response\n                addMessage('assistant', textResponse);\n            }\n\n        } catch (error) {\n            console.error(error);\n            addMessage('assistant', `Sorry, there was an error connecting to the AI. Please check your API key and the console for details. Error: ${error.message}`);\n        } finally {\n            setIsThinking(false);\n        }\n    };\n\n    const handleResetChat = () => {\n        setChatHistory(getInitialMessage());\n    };\n\n    const handleUpdateEmployee = (name, updatedData) => {\n        setEmployees(prev => ({...prev, [name]: updatedData}));\n        addMessage('assistant', `Updated settings for ${name}. Regenerating schedule.`);\n    };\n\n    const handleRemoveEmployee = (name) => {\n        setEmployees(prev => {\n            const newState = {...prev};\n            delete newState[name];\n            return newState;\n        });\n        addMessage('assistant', `Removed ${name}. Regenerating schedule.`);\n    };\n\n    const handleAddEmployee = () => {\n        const newName = `New Employee ${Object.keys(employees).length + 1}`;\n        setEmployees(prev => ({\n            ...prev,\n            [newName]: {\n                shift: { start: '09:00', end: '17:00' }, hours: 40, lunch: { start: '12:00', end: '13:00' },\n                abilities: ['Reservations'], specialistTask: '', specialistTarget: 0, pto: []\n            }\n        }));\n        addMessage('assistant', `Added ${newName}. Please update their details.`);\n    };\n    \n    useEffect(() => { generateSchedule(); }, [employees, generateSchedule]);\n\n    const renderScheduleGrid = (day) => {\n        if (!schedule || !schedule[day]) return <div className=\"p-4 text-center\">Generating...</div>;\n        return (\n            <div className=\"overflow-x-auto shadow-md rounded-lg\">\n                <table className=\"min-w-full border-collapse\">\n                    <thead>\n                        <tr className=\"bg-gray-200\"><th className=\"sticky left-0 bg-gray-200 z-10 p-2 border-r text-left w-40\">Employee</th>{TIME_SLOTS.map(t => <th key={t} className=\"p-1 border-b border-gray-300 text-xs w-20 font-normal\">{t}</th>)}</tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(employees).sort().map(name => (\n                            <tr key={name} className=\"[&:nth-child(even)]:bg-gray-50\">\n                                <td className=\"sticky left-0 bg-white [&:nth-child(even)]:bg-gray-50 z-10 p-2 border-r font-medium text-sm whitespace-nowrap\">{name}</td>\n                                {schedule[day][name].map((task, i) => (\n                                    <td key={i} style={{backgroundColor: hexToRgba(COLORS[task], 0.8), color:['Badges/Projects','PTO'].includes(task)?'white':'black', border:`1px solid ${hexToRgba(COLORS[task],0.5)}`}} className=\"text-center text-xs p-1 font-semibold\">{task !== schedule[day][name][i-1] ? task.replace(/s$/, '') : ''}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"flex h-screen bg-gray-100 font-sans\">\n            <div className=\"w-1/3 max-w-md flex flex-col h-full border-r bg-white shadow-lg\">\n                <div className=\"p-4 border-b bg-gray-50\">\n                    <h1 className=\"text-2xl font-bold text-gray-800\">Scheduling Assistant</h1>\n                    <div className=\"flex mt-2 border border-gray-300 rounded-lg\">\n                        <button onClick={() => setActiveView('chat')} className={`w-1/2 p-2 rounded-l-lg ${activeView === 'chat' ? 'bg-blue-600 text-white' : 'bg-white hover:bg-gray-200'}`}>Chat & Controls</button>\n                        <button onClick={() => setActiveView('employees')} className={`w-1/2 p-2 rounded-r-lg ${activeView === 'employees' ? 'bg-blue-600 text-white' : 'bg-white hover:bg-gray-200'}`}>Manage Employees</button>\n                    </div>\n                </div>\n\n                {activeView === 'chat' && (\n                    <div className=\"flex-grow flex flex-col\">\n                        <div className=\"p-4 border-b\">\n                            <label htmlFor=\"api-key\" className=\"text-sm font-medium text-gray-700\">Gemini API Key</label>\n                            <input\n                                id=\"api-key\"\n                                type=\"password\"\n                                value={apiKey}\n                                onChange={e => setApiKey(e.target.value)}\n                                className=\"w-full p-2 mt-1 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                placeholder=\"Enter your API key here\"\n                            />\n                        </div>\n                        <div className=\"p-4 border-b flex space-x-2\">\n                           <button onClick={() => fileInputRef.current.click()} className=\"w-1/2 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg\">Upload PTO</button>\n                           <input type=\"file\" ref={fileInputRef} onChange={handlePtoUpload} accept=\"image/*\" className=\"hidden\" />\n                           <button onClick={handleResetChat} className=\"w-1/2 bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg\">Reset Chat</button>\n                        </div>\n                        <div className=\"flex-grow p-4 overflow-y-auto bg-gray-50\">{chatHistory.map((msg, i) => <div key={i} className={`mb-4 flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}><div className={`max-w-xs p-3 rounded-2xl ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-white border'}`}><p className=\"text-sm\" dangerouslySetInnerHTML={{ __html: msg.text.replace(/\\n/g, '<br />') }}></p></div></div>)} {isThinking && <div className=\"mb-4 flex justify-start\"><div className=\"max-w-xs p-3 rounded-2xl bg-white border\"><p className=\"text-sm text-gray-500 animate-pulse\">Assistant is thinking...</p></div></div>}</div>\n                        <div className=\"p-4 border-t bg-white flex\"><input type=\"text\" value={userInput} onChange={e => setUserInput(e.target.value)} onKeyPress={e => e.key === 'Enter' && handleUserInput()} className=\"flex-grow p-2 border rounded-l-lg\" placeholder=\"Type request...\" disabled={isThinking} /><button onClick={handleUserInput} className=\"bg-blue-600 text-white p-2 rounded-r-lg\" disabled={isThinking}>Send</button></div>\n                    </div>\n                )}\n                \n                {activeView === 'employees' && (\n                     <div className=\"flex-grow flex flex-col\">\n                        <div className=\"p-4 border-b\"><button onClick={handleAddEmployee} className=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg\">Add New Employee</button></div>\n                        <div className=\"flex-grow p-4 overflow-y-auto bg-gray-50\">\n                            {Object.entries(employees).map(([name, data]) => (\n                                <EmployeeForm key={name} employeeName={name} employee={data} onUpdate={handleUpdateEmployee} onRemove={handleRemoveEmployee} />\n                            ))}\n                        </div>\n                    </div>\n                )}\n\n            </div>\n\n            <div className=\"flex-grow flex flex-col h-full overflow-hidden\">\n                <div className=\"p-4 border-b bg-white\"><h2 className=\"text-xl font-semibold text-gray-700\">Weekly Schedule</h2></div>\n                <div className=\"flex-grow overflow-auto p-4 bg-gray-100\">{DAYS.map(day => <div key={day} className=\"mb-8\"><h3 className=\"text-lg font-bold mb-2 text-gray-800\">{day}</h3>{renderScheduleGrid(day)}</div>)}</div>\n            </div>\n        </div>\n    );\n}\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAE/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;EAC9B,IAAI,CAACD,GAAG,EAAE,OAAO,uBAAuBC,KAAK,GAAG;EAChD,MAAMC,CAAC,GAAGC,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACvC,MAAMC,CAAC,GAAGF,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACvC,MAAME,CAAC,GAAGH,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;EACvC,OAAO,QAAQF,CAAC,KAAKG,CAAC,KAAKC,CAAC,KAAKL,KAAK,GAAG;AAC7C,CAAC;AAED,MAAMM,MAAM,GAAG;EACX,cAAc,EAAE,SAAS;EAAE,UAAU,EAAE,SAAS;EAAE,cAAc,EAAE,SAAS;EAC3E,SAAS,EAAE,SAAS;EAAE,WAAW,EAAE,SAAS;EAAE,UAAU,EAAE,SAAS;EAAE,OAAO,EAAE,SAAS;EACvF,YAAY,EAAE,SAAS;EAAE,iBAAiB,EAAE,SAAS;EAAE,OAAO,EAAE,SAAS;EACzE,KAAK,EAAE,SAAS;EAAE,KAAK,EAAE;AAC7B,CAAC;AAED,MAAMC,aAAa,GAAG,CAClB,cAAc,EAAE,UAAU,EAAE,cAAc,EAAE,SAAS,EACrD,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,iBAAiB,CACpE;AAED,MAAMC,iBAAiB,GAAG;EACtB,OAAO,EAAE;IAAEC,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,CAAC;IAAEC,cAAc,EAAE,cAAc;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC;EAC1L,MAAM,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,CAAC;IAAEC,cAAc,EAAE,SAAS;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EACpN,SAAS,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,CAAC;IAAEC,cAAc,EAAE,SAAS;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC;EACxN,UAAU,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,CAAC;IAAEC,cAAc,EAAE,SAAS;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EACxN,MAAM,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,iBAAiB,CAAC;IAAEC,cAAc,EAAE,iBAAiB;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EACpO,OAAO,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,YAAY,CAAC;IAAEC,cAAc,EAAE,YAAY;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EAC3N,SAAS,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,WAAW,CAAC;IAAEC,cAAc,EAAE,WAAW;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EAC3N,YAAY,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,cAAc,CAAC;IAAEC,cAAc,EAAE,cAAc;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC;EACrO,MAAM,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC;IAAEC,cAAc,EAAE,UAAU;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,GAAG,EAAE;EAAG,CAAC;EACvN,QAAQ,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,cAAc,CAAC;IAAEC,cAAc,EAAE,cAAc;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG,CAAC;EAChO,OAAO,EAAE;IAAER,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;MAAEH,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAQ,CAAC;IAAEG,SAAS,EAAE,CAAC,cAAc,EAAE,UAAU,EAAE,OAAO,CAAC;IAAEC,cAAc,EAAE,OAAO;IAAEC,gBAAgB,EAAE,CAAC;IAAEC,GAAG,EAAE;EAAG;AACpN,CAAC;AAED,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;AACrE,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;EAAEC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI;AAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;EAC9D,MAAMC,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,CAAC,GAAG,CAAC,CAAC;EAC/B,MAAMI,CAAC,GAAIJ,CAAC,GAAG,CAAC,GAAI,EAAE;EACtB,OAAO,GAAGK,MAAM,CAACJ,CAAC,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,CAAC,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACxE,CAAC,CAAC;AAEF,MAAMC,iBAAiB,GAAGA,CAAA,KAAO,CAAC;EAAEC,MAAM,EAAE,WAAW;EAAEC,IAAI,EAAE;AAA2D,CAAC,CAAE;;AAG7H;;AAEA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC0C,QAAQ,CAAC;EAElD,MAAMO,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGH,CAAC,CAACI,MAAM;IACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;IAEzC,IAAID,QAAQ,EAAE;MACVR,WAAW,CAACU,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACH,KAAK,GAAG;UAAE,GAAGG,IAAI,CAACH,KAAK,CAAC;UAAE,CAACC,QAAQ,GAAGJ;QAAM;MAAE,CAAC,CAAC,CAAC;IACtF,CAAC,MAAM;MACHJ,WAAW,CAACU,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACP,IAAI,GAAGE,IAAI,KAAK,QAAQ,GAAGM,UAAU,CAACP,KAAK,CAAC,GAAGA;MAAM,CAAC,CAAC,CAAC;IAC7F;EACJ,CAAC;EAED,MAAMQ,mBAAmB,GAAIC,OAAO,IAAK;IACrC,MAAMC,YAAY,GAAGf,QAAQ,CAAC1B,SAAS,CAAC0C,QAAQ,CAACF,OAAO,CAAC,GACnDd,QAAQ,CAAC1B,SAAS,CAAC2C,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,OAAO,CAAC,GAC7C,CAAC,GAAGd,QAAQ,CAAC1B,SAAS,EAAEwC,OAAO,CAAC;IACtCb,WAAW,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAErC,SAAS,EAAEyC;IAAa,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBtB,QAAQ,CAACD,YAAY,EAAEI,QAAQ,CAAC;EACpC,CAAC;EAED,oBACI3C,OAAA;IAAK+D,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAChDhE,OAAA;MAAI+D,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAEzB;IAAY;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DpE,OAAA;MAAK+D,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC3ChE,OAAA;QAAOiD,IAAI,EAAC,QAAQ;QAACF,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEL,QAAQ,CAAC5B,KAAM;QAACsD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAc;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7IpE,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,gBAAgB;QAACC,KAAK,EAAEL,QAAQ,CAACzB,cAAe;QAACmD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChKpE,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,aAAa;QAACC,KAAK,EAAEL,QAAQ,CAAC/B,KAAK,CAACC,KAAM;QAACwD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9JpE,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,WAAW;QAACC,KAAK,EAAEL,QAAQ,CAAC/B,KAAK,CAACE,GAAI;QAACuD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxJpE,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,aAAa;QAACC,KAAK,EAAEL,QAAQ,CAAC3B,KAAK,CAACH,KAAM;QAACwD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAqB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9JpE,OAAA;QAAOiD,IAAI,EAAC,MAAM;QAACF,IAAI,EAAC,WAAW;QAACC,KAAK,EAAEL,QAAQ,CAAC3B,KAAK,CAACF,GAAI;QAACuD,QAAQ,EAAExB,YAAa;QAACkB,SAAS,EAAC,oBAAoB;QAACO,WAAW,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvJ,CAAC,eACNpE,OAAA;MAAK+D,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBhE,OAAA;QAAI+D,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDpE,OAAA;QAAK+D,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAC1CtD,aAAa,CAAC6D,GAAG,CAACd,OAAO,iBACtBzD,OAAA;UAAqB+D,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBACxDhE,OAAA;YAAOiD,IAAI,EAAC,UAAU;YAACuB,OAAO,EAAE7B,QAAQ,CAAC1B,SAAS,CAAC0C,QAAQ,CAACF,OAAO,CAAE;YAACY,QAAQ,EAAEA,CAAA,KAAMb,mBAAmB,CAACC,OAAO;UAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtHpE,OAAA;YAAAgE,QAAA,EAAOP;UAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAFdX,OAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNpE,OAAA;MAAK+D,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChChE,OAAA;QAAQyE,OAAO,EAAEX,YAAa;QAACC,SAAS,EAAC,kFAAkF;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3IpE,OAAA;QAAQyE,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAACF,YAAY,CAAE;QAACwB,SAAS,EAAC,8EAA8E;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAGD;AAAA1B,EAAA,CAxDML,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA0DlB,eAAe,SAASsC,GAAGA,CAAA,EAAG;EAAAC,GAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlF,QAAQ,CAACe,iBAAiB,CAAC;EAC7D,MAAM,CAACoE,QAAQ,EAAEC,WAAW,CAAC,GAAGpF,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqF,WAAW,EAAEC,cAAc,CAAC,GAAGtF,QAAQ,CAACsC,iBAAiB,CAAC,CAAC,CAAC;EACnE,MAAM,CAACiD,SAAS,EAAEC,YAAY,CAAC,GAAGxF,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyF,UAAU,EAAEC,aAAa,CAAC,GAAG1F,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAAC2F,MAAM,EAAEC,SAAS,CAAC,GAAG5F,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC6F,UAAU,EAAEC,aAAa,CAAC,GAAG9F,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM+F,YAAY,GAAGhG,KAAK,CAACiG,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAMC,UAAU,GAAGA,CAAC1D,MAAM,EAAEC,IAAI,KAAK;IACjC8C,cAAc,CAAC5B,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEnB,MAAM;MAAEC;IAAK,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAM0D,gBAAgB,GAAGhG,WAAW,CAAC,MAAM;IACvC,MAAMiG,WAAW,GAAG,CAAC,CAAC;IACtB1E,IAAI,CAAC2E,OAAO,CAACC,GAAG,IAAI;MAChBF,WAAW,CAACE,GAAG,CAAC,GAAG,CAAC,CAAC;MACrBC,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAACmB,OAAO,CAACjD,IAAI,IAAI;QACnCgD,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,GAAGxB,KAAK,CAACD,UAAU,CAACG,MAAM,CAAC,CAAC2E,IAAI,CAAC,KAAK,CAAC;QAC7D,MAAMC,GAAG,GAAGxB,SAAS,CAAC9B,IAAI,CAAC;QAC3B,IAAIsD,GAAG,CAACjF,GAAG,CAACkF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKA,GAAG,CAAC,EAAE;UAClCF,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACqD,IAAI,CAAC,KAAK,CAAC;UAClC;QACJ;QACA9E,UAAU,CAAC0E,OAAO,CAAC,CAACQ,IAAI,EAAE7E,CAAC,KAAK;UAC7B,IAAI6E,IAAI,IAAIH,GAAG,CAACzF,KAAK,CAACC,KAAK,IAAI2F,IAAI,GAAGH,GAAG,CAACzF,KAAK,CAACE,GAAG,EAAE;YACjDiF,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,GAAG0E,GAAG,CAACnF,cAAc,IAAI,cAAc;UACpE;UACA,IAAImF,GAAG,CAACrF,KAAK,IAAIqF,GAAG,CAACrF,KAAK,CAACH,KAAK,IAAI2F,IAAI,IAAIH,GAAG,CAACrF,KAAK,CAACH,KAAK,IAAI2F,IAAI,GAAGH,GAAG,CAACrF,KAAK,CAACF,GAAG,EAAE;YACjFiF,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,GAAG,OAAO;UACvC;QACH,CAAC,CAAC;MACN,CAAC,CAAC;MACFL,UAAU,CAAC0E,OAAO,CAAC,CAACQ,IAAI,EAAE7E,CAAC,KAAK;QAC5B,IAAI8E,SAAS,GAAID,IAAI,IAAI,OAAO,IAAIA,IAAI,GAAG,OAAO,GAAI,CAAC,GAAIA,IAAI,IAAI,OAAO,IAAIA,IAAI,GAAG,OAAO,GAAI,CAAC,GAAG,CAAC;QACrG,IAAIE,UAAU,GAAIF,IAAI,IAAI,OAAO,IAAIA,IAAI,GAAG,OAAO,GAAI,CAAC,GAAG,CAAC;QAC5D,IAAI,CAACC,SAAS,IAAI,CAACC,UAAU,EAAE;QAE/B,IAAIC,QAAQ,GAAGT,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAACjB,MAAM,CAACb,IAAI,IAAIgD,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,KAAK,IAAIoE,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,OAAO,IAAIoE,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,KAAK,CAAC;QACzK,IAAIiF,QAAQ,GAAGD,QAAQ,CAAC/C,MAAM,CAACb,IAAI,IAAIgD,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,cAAc,CAAC,CAACF,MAAM;QAC3F,IAAIoF,SAAS,GAAGF,QAAQ,CAAC/C,MAAM,CAACb,IAAI,IAAIgD,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,UAAU,CAAC,CAACF,MAAM;QAExFkF,QAAQ,CAACX,OAAO,CAACjD,IAAI,IAAI;UACrB,MAAMsD,GAAG,GAAGxB,SAAS,CAAC9B,IAAI,CAAC;UAC3B,MAAM+D,YAAY,GAAGT,GAAG,CAACnF,cAAc,IAAImF,GAAG,CAACnF,cAAc,CAACO,MAAM,GAAG,CAAC;UACxE,IAAIqF,YAAY,EAAE;UAElB,IAAIT,GAAG,CAACpF,SAAS,CAAC0C,QAAQ,CAAC,UAAU,CAAC,IAAIkD,SAAS,GAAGH,UAAU,EAAE;YAC9D,IAAIX,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,UAAU,EAAE;cAC1C,IAAIoE,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,cAAc,EAAEiF,QAAQ,EAAE;cAC5Db,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,GAAG,UAAU;cACtCkF,SAAS,EAAE;YACf;UACJ,CAAC,MAAM,IAAIR,GAAG,CAACpF,SAAS,CAAC0C,QAAQ,CAAC,cAAc,CAAC,IAAIiD,QAAQ,GAAGH,SAAS,EAAE;YACvE,IAAIV,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,cAAc,EAAE;cAC/C,IAAIoE,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,KAAK,UAAU,EAAEkF,SAAS,EAAE;cACxDd,WAAW,CAACE,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,CAAC,GAAG,cAAc;cAC1CiF,QAAQ,EAAE;YACd;UACJ;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,CAAC;IACF5B,WAAW,CAACe,WAAW,CAAC;EAC5B,CAAC,EAAE,CAAClB,SAAS,CAAC,CAAC;EAEfhF,SAAS,CAAC,MAAM;IACZiG,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,eAAe,GAAIC,KAAK,IAAK;IAC/B,MAAMC,IAAI,GAAGD,KAAK,CAAC9D,MAAM,CAACgE,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACD,IAAI,EAAE;IACX,IAAI,CAAC1B,MAAM,EAAE;MACTM,UAAU,CAAC,WAAW,EAAE,kDAAkD,CAAC;MAC3E;IACJ;IAEAA,UAAU,CAAC,WAAW,EAAE,wDAAwD,CAAC;IACjFH,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAMyB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,SAAS,GAAG,YAAY;MAC3B,MAAMC,eAAe,GAAGH,MAAM,CAACI,MAAM,CAAClE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAEnD,MAAMmE,iBAAiB,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmCtB,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAAC4C,IAAI,CAAC,IAAI,CAAC;AACpE,CAAC;MAEW,MAAMC,OAAO,GAAG;QACZC,QAAQ,EAAE,CACN;UACIC,IAAI,EAAE,MAAM;UACZC,KAAK,EAAE,CACH;YAAEzF,IAAI,EAAEoF;UAAkB,CAAC,EAC3B;YACIM,UAAU,EAAE;cACRC,QAAQ,EAAEd,IAAI,CAAChE,IAAI;cACnB+E,IAAI,EAAEV;YACV;UACJ,CAAC;QAET,CAAC;MAET,CAAC;MAED,IAAI;QACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,gGAAgG3C,MAAM,EAAE,EAAE;UACnI4C,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,OAAO;QAChC,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;UACb,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIC,KAAK,CAAC,cAAcV,QAAQ,CAACW,MAAM,IAAIX,QAAQ,CAACY,UAAU,cAAcP,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,EAAE,CAAC;QACnH;QAEA,MAAMlB,MAAM,GAAG,MAAMU,QAAQ,CAACS,IAAI,CAAC,CAAC;QAEpC,IAAInB,MAAM,CAACuB,UAAU,IAAIvB,MAAM,CAACuB,UAAU,CAACrH,MAAM,GAAG,CAAC,IACjD8F,MAAM,CAACuB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,IAAIxB,MAAM,CAACuB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAClB,KAAK,IAClEN,MAAM,CAACuB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAClB,KAAK,CAACpG,MAAM,GAAG,CAAC,EAAE;UAEjD,IAAIuH,QAAQ,GAAGzB,MAAM,CAACuB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAClB,KAAK,CAAC,CAAC,CAAC,CAACzF,IAAI;UACzD4G,QAAQ,GAAGA,QAAQ,CAACC,SAAS,CAACD,QAAQ,CAACE,OAAO,CAAC,GAAG,CAAC,EAAEF,QAAQ,CAACG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAEnF,MAAMC,OAAO,GAAGd,IAAI,CAACe,KAAK,CAACL,QAAQ,CAAC;UAEpC,MAAMM,gBAAgB,GAAG;YAAE,GAAGzE;UAAU,CAAC;UACzC,IAAI0E,YAAY,GAAG,EAAE;UAErBrD,MAAM,CAACC,IAAI,CAACiD,OAAO,CAAC,CAACpD,OAAO,CAACjD,IAAI,IAAI;YACjC,IAAIuG,gBAAgB,CAACvG,IAAI,CAAC,EAAE;cACxB,MAAMyG,SAAS,GAAGJ,OAAO,CAACrG,IAAI,CAAC,CAACa,MAAM,CAACqC,GAAG,IAAI5E,IAAI,CAACsC,QAAQ,CAACsC,GAAG,CAAC,CAAC;cACjEqD,gBAAgB,CAACvG,IAAI,CAAC,CAAC3B,GAAG,GAAGoI,SAAS,CAACjF,GAAG,CAAC0B,GAAG,KAAK;gBAAEA;cAAI,CAAC,CAAC,CAAC;cAC5D,IAAIuD,SAAS,CAAC/H,MAAM,GAAG,CAAC,EAAE;gBACxB8H,YAAY,CAACE,IAAI,CAAC1G,IAAI,CAAC;cACzB;YACJ;UACJ,CAAC,CAAC;UAEF+B,YAAY,CAACwE,gBAAgB,CAAC;UAC9B,IAAIC,YAAY,CAAC9H,MAAM,GAAG,CAAC,EAAE;YAC3BoE,UAAU,CAAC,WAAW,EAAE,mCAAmC0D,YAAY,CAAC9B,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC;UACvH,CAAC,MAAM;YACL5B,UAAU,CAAC,WAAW,EAAE,6FAA6F,CAAC;UACxH;QAEF,CAAC,MAAM;UACJ,MAAM,IAAI8C,KAAK,CAAC,0DAA0D,CAAC;QAC9E;MAEJ,CAAC,CAAC,OAAOe,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB7D,UAAU,CAAC,WAAW,EAAE,iIAAiI6D,KAAK,CAACE,OAAO,EAAE,CAAC;MAC7K,CAAC,SAAS;QACNlE,aAAa,CAAC,KAAK,CAAC;QACpB,IAAGC,YAAY,CAACkE,OAAO,EAAE;UACrBlE,YAAY,CAACkE,OAAO,CAAC7G,KAAK,GAAG,EAAE;QACnC;MACJ;IACJ,CAAC;IACDmE,MAAM,CAAC2C,aAAa,CAAC7C,IAAI,CAAC;EAC9B,CAAC;;EAED;EACA,MAAM8C,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC5E,SAAS,CAAC6E,IAAI,CAAC,CAAC,IAAIvE,UAAU,EAAE;IACrC,IAAI,CAACF,MAAM,EAAE;MACTM,UAAU,CAAC,WAAW,EAAE,6CAA6C,CAAC;MACtE;IACJ;IAEA,MAAMoE,UAAU,GAAG,CAAC,GAAGhF,WAAW,EAAE;MAAE9C,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE+C;IAAU,CAAC,CAAC;IACxED,cAAc,CAAC+E,UAAU,CAAC;IAC1BvE,aAAa,CAAC,IAAI,CAAC;IACnBN,YAAY,CAAC,EAAE,CAAC;IAEhB,MAAMoC,iBAAiB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMc,IAAI,CAACC,SAAS,CAAC1D,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AACxC;AACA,MAAMyD,IAAI,CAACC,SAAS,CAACxD,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;AACvC;AACA,mIAAmI;IAE3H,MAAMmF,UAAU,GAAGD,UAAU,CAAC1F,GAAG,CAAC4F,GAAG,KAAK;MACtCvC,IAAI,EAAEuC,GAAG,CAAChI,MAAM,KAAK,WAAW,GAAG,OAAO,GAAG,MAAM;MACnD0F,KAAK,EAAE,CAAC;QAAEzF,IAAI,EAAE+H,GAAG,CAAC/H;MAAK,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,IAAI;MACA,MAAMsF,OAAO,GAAG;QACZC,QAAQ,EAAE,CACN;UAAEC,IAAI,EAAE,MAAM;UAAEC,KAAK,EAAE,CAAC;YAAEzF,IAAI,EAAEoF;UAAkB,CAAC;QAAE,CAAC,EACtD;UAAEI,IAAI,EAAE,OAAO;UAAEC,KAAK,EAAE,CAAC;YAAEzF,IAAI,EAAE;UAA8E,CAAC;QAAE,CAAC,EACnH,GAAG8H,UAAU;MAErB,CAAC;MAED,MAAMjC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gGAAgG3C,MAAM,EAAE,EAAE;QACnI4C,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,OAAO;MAChC,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAAC,cAAcV,QAAQ,CAACW,MAAM,IAAIX,QAAQ,CAACY,UAAU,cAAcP,IAAI,CAACC,SAAS,CAACE,SAAS,CAAC,EAAE,CAAC;MACnH;MAEA,MAAMlB,MAAM,GAAG,MAAMU,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpC,MAAM0B,YAAY,GAAG7C,MAAM,CAACuB,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAAClB,KAAK,CAAC,CAAC,CAAC,CAACzF,IAAI;MAE/D,IAAI;QACA;QACA,MAAMiI,WAAW,GAAGD,YAAY,CAACnB,SAAS,CAACmB,YAAY,CAAClB,OAAO,CAAC,GAAG,CAAC,EAAEkB,YAAY,CAACjB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACxG,MAAMmB,cAAc,GAAGhC,IAAI,CAACe,KAAK,CAACgB,WAAW,CAAC;QAE9C,IAAIC,cAAc,CAACC,MAAM,IAAID,cAAc,CAACtC,IAAI,EAAE;UAC9C,QAAQsC,cAAc,CAACC,MAAM;YACzB,KAAK,YAAY;cAAE;gBACf,MAAM;kBAAEhI,YAAY;kBAAEiI;gBAAQ,CAAC,GAAGF,cAAc,CAACtC,IAAI;gBACrD,MAAMsB,gBAAgB,GAAG;kBAAE,GAAGzE;gBAAU,CAAC;gBACzC,IAAIyE,gBAAgB,CAAC/G,YAAY,CAAC,EAAE;kBAChC+G,gBAAgB,CAAC/G,YAAY,CAAC,CAACnB,GAAG,GAAGoJ,OAAO,CAACjG,GAAG,CAAC0B,GAAG,KAAK;oBAAEA;kBAAI,CAAC,CAAC,CAAC;kBAClEnB,YAAY,CAACwE,gBAAgB,CAAC;kBAC9BzD,UAAU,CAAC,WAAW,EAAE,2CAA2C,CAAC;gBACxE,CAAC,MAAM;kBACHA,UAAU,CAAC,WAAW,EAAE,mCAAmCtD,YAAY,kBAAkB,CAAC;gBAC9F;gBACA;cACJ;YACA,KAAK,iBAAiB;cAAE;gBACnByC,WAAW,CAACsF,cAAc,CAACtC,IAAI,CAAC;gBAChCnC,UAAU,CAAC,WAAW,EAAE,2CAA2C,CAAC;gBACpE;cACL;YACA;cACIA,UAAU,CAAC,WAAW,EAAE,4CAA4CyE,cAAc,CAACC,MAAM,EAAE,CAAC;UACpG;QACJ,CAAC,MAAM;UACH;UACA1E,UAAU,CAAC,WAAW,EAAEuE,YAAY,CAAC;QACzC;MACJ,CAAC,CAAC,OAAOtH,CAAC,EAAE;QACR;QACA+C,UAAU,CAAC,WAAW,EAAEuE,YAAY,CAAC;MACzC;IAEJ,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB7D,UAAU,CAAC,WAAW,EAAE,iHAAiH6D,KAAK,CAACE,OAAO,EAAE,CAAC;IAC7J,CAAC,SAAS;MACNlE,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAM+E,eAAe,GAAGA,CAAA,KAAM;IAC1BvF,cAAc,CAAChD,iBAAiB,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAMwI,oBAAoB,GAAGA,CAAC3H,IAAI,EAAE4H,WAAW,KAAK;IAChD7F,YAAY,CAACxB,IAAI,KAAK;MAAC,GAAGA,IAAI;MAAE,CAACP,IAAI,GAAG4H;IAAW,CAAC,CAAC,CAAC;IACtD9E,UAAU,CAAC,WAAW,EAAE,wBAAwB9C,IAAI,0BAA0B,CAAC;EACnF,CAAC;EAED,MAAM6H,oBAAoB,GAAI7H,IAAI,IAAK;IACnC+B,YAAY,CAACxB,IAAI,IAAI;MACjB,MAAMuH,QAAQ,GAAG;QAAC,GAAGvH;MAAI,CAAC;MAC1B,OAAOuH,QAAQ,CAAC9H,IAAI,CAAC;MACrB,OAAO8H,QAAQ;IACnB,CAAC,CAAC;IACFhF,UAAU,CAAC,WAAW,EAAE,WAAW9C,IAAI,0BAA0B,CAAC;EACtE,CAAC;EAED,MAAM+H,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG,gBAAgB7E,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAACpD,MAAM,GAAG,CAAC,EAAE;IACnEqD,YAAY,CAACxB,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACyH,OAAO,GAAG;QACPnK,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAE;UAAEH,KAAK,EAAE,OAAO;UAAEC,GAAG,EAAE;QAAQ,CAAC;QAC3FG,SAAS,EAAE,CAAC,cAAc,CAAC;QAAEC,cAAc,EAAE,EAAE;QAAEC,gBAAgB,EAAE,CAAC;QAAEC,GAAG,EAAE;MAC/E;IACJ,CAAC,CAAC,CAAC;IACHyE,UAAU,CAAC,WAAW,EAAE,SAASkF,OAAO,gCAAgC,CAAC;EAC7E,CAAC;EAEDlL,SAAS,CAAC,MAAM;IAAEiG,gBAAgB,CAAC,CAAC;EAAE,CAAC,EAAE,CAACjB,SAAS,EAAEiB,gBAAgB,CAAC,CAAC;EAEvE,MAAMkF,kBAAkB,GAAI/E,GAAG,IAAK;IAChC,IAAI,CAAClB,QAAQ,IAAI,CAACA,QAAQ,CAACkB,GAAG,CAAC,EAAE,oBAAOjG,OAAA;MAAK+D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAC5F,oBACIpE,OAAA;MAAK+D,SAAS,EAAC,sCAAsC;MAAAC,QAAA,eACjDhE,OAAA;QAAO+D,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACzChE,OAAA;UAAAgE,QAAA,eACIhE,OAAA;YAAI+D,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAAChE,OAAA;cAAI+D,SAAS,EAAC,4DAA4D;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAAC9C,UAAU,CAACiD,GAAG,CAAC0G,CAAC,iBAAIjL,OAAA;cAAY+D,SAAS,EAAC,uDAAuD;cAAAC,QAAA,EAAEiH;YAAC,GAAvEA,CAAC;cAAAhH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA2E,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnO,CAAC,eACRpE,OAAA;UAAAgE,QAAA,EACKkC,MAAM,CAACC,IAAI,CAACtB,SAAS,CAAC,CAACqG,IAAI,CAAC,CAAC,CAAC3G,GAAG,CAACxB,IAAI,iBACnC/C,OAAA;YAAe+D,SAAS,EAAC,gCAAgC;YAAAC,QAAA,gBACrDhE,OAAA;cAAI+D,SAAS,EAAC,+GAA+G;cAAAC,QAAA,EAAEjB;YAAI;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACxIW,QAAQ,CAACkB,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACwB,GAAG,CAAC,CAAC4G,IAAI,EAAExJ,CAAC,kBAC7B3B,OAAA;cAAYoL,KAAK,EAAE;gBAACC,eAAe,EAAEpL,SAAS,CAACQ,MAAM,CAAC0K,IAAI,CAAC,EAAE,GAAG,CAAC;gBAAEG,KAAK,EAAC,CAAC,iBAAiB,EAAC,KAAK,CAAC,CAAC3H,QAAQ,CAACwH,IAAI,CAAC,GAAC,OAAO,GAAC,OAAO;gBAAEI,MAAM,EAAC,aAAatL,SAAS,CAACQ,MAAM,CAAC0K,IAAI,CAAC,EAAC,GAAG,CAAC;cAAE,CAAE;cAACpH,SAAS,EAAC,uCAAuC;cAAAC,QAAA,EAAEmH,IAAI,KAAKpG,QAAQ,CAACkB,GAAG,CAAC,CAAClD,IAAI,CAAC,CAACpB,CAAC,GAAC,CAAC,CAAC,GAAGwJ,IAAI,CAACK,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG;YAAE,GAAhS7J,CAAC;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoS,CACjT,CAAC;UAAA,GAJGrB,IAAI;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKT,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAEd,CAAC;EAED,oBACIpE,OAAA;IAAK+D,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAChDhE,OAAA;MAAK+D,SAAS,EAAC,iEAAiE;MAAAC,QAAA,gBAC5EhE,OAAA;QAAK+D,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpChE,OAAA;UAAI+D,SAAS,EAAC,kCAAkC;UAAAC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1EpE,OAAA;UAAK+D,SAAS,EAAC,6CAA6C;UAAAC,QAAA,gBACxDhE,OAAA;YAAQyE,OAAO,EAAEA,CAAA,KAAMa,aAAa,CAAC,MAAM,CAAE;YAACvB,SAAS,EAAE,0BAA0BsB,UAAU,KAAK,MAAM,GAAG,wBAAwB,GAAG,4BAA4B,EAAG;YAAArB,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9LpE,OAAA;YAAQyE,OAAO,EAAEA,CAAA,KAAMa,aAAa,CAAC,WAAW,CAAE;YAACvB,SAAS,EAAE,0BAA0BsB,UAAU,KAAK,WAAW,GAAG,wBAAwB,GAAG,4BAA4B,EAAG;YAAArB,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAELiB,UAAU,KAAK,MAAM,iBAClBrF,OAAA;QAAK+D,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACpChE,OAAA;UAAK+D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBhE,OAAA;YAAOyL,OAAO,EAAC,SAAS;YAAC1H,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7FpE,OAAA;YACI0L,EAAE,EAAC,SAAS;YACZzI,IAAI,EAAC,UAAU;YACfD,KAAK,EAAEuC,MAAO;YACdlB,QAAQ,EAAEvB,CAAC,IAAI0C,SAAS,CAAC1C,CAAC,CAACI,MAAM,CAACF,KAAK,CAAE;YACzCe,SAAS,EAAC,uFAAuF;YACjGO,WAAW,EAAC;UAAyB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNpE,OAAA;UAAK+D,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBACzChE,OAAA;YAAQyE,OAAO,EAAEA,CAAA,KAAMkB,YAAY,CAACkE,OAAO,CAAC8B,KAAK,CAAC,CAAE;YAAC5H,SAAS,EAAC,+EAA+E;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClKpE,OAAA;YAAOiD,IAAI,EAAC,MAAM;YAAC2I,GAAG,EAAEjG,YAAa;YAACtB,QAAQ,EAAE0C,eAAgB;YAAC8E,MAAM,EAAC,SAAS;YAAC9H,SAAS,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvGpE,OAAA;YAAQyE,OAAO,EAAEgG,eAAgB;YAAC1G,SAAS,EAAC,+EAA+E;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7I,CAAC,eACNpE,OAAA;UAAK+D,SAAS,EAAC,0CAA0C;UAAAC,QAAA,GAAEiB,WAAW,CAACV,GAAG,CAAC,CAAC4F,GAAG,EAAExI,CAAC,kBAAK3B,OAAA;YAAa+D,SAAS,EAAE,aAAaoG,GAAG,CAAChI,MAAM,KAAK,MAAM,GAAG,aAAa,GAAG,eAAe,EAAG;YAAA6B,QAAA,eAAChE,OAAA;cAAK+D,SAAS,EAAE,4BAA4BoG,GAAG,CAAChI,MAAM,KAAK,MAAM,GAAG,wBAAwB,GAAG,iBAAiB,EAAG;cAAA6B,QAAA,eAAChE,OAAA;gBAAG+D,SAAS,EAAC,SAAS;gBAAC+H,uBAAuB,EAAE;kBAAEC,MAAM,EAAE5B,GAAG,CAAC/H,IAAI,CAACoJ,OAAO,CAAC,KAAK,EAAE,QAAQ;gBAAE;cAAE;gBAAAvH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC,GAAnTzC,CAAC;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuT,CAAC,CAAC,EAAC,GAAC,EAACqB,UAAU,iBAAIzF,OAAA;YAAK+D,SAAS,EAAC,yBAAyB;YAAAC,QAAA,eAAChE,OAAA;cAAK+D,SAAS,EAAC,0CAA0C;cAAAC,QAAA,eAAChE,OAAA;gBAAG+D,SAAS,EAAC,qCAAqC;gBAAAC,QAAA,EAAC;cAAwB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjnBpE,OAAA;UAAK+D,SAAS,EAAC,4BAA4B;UAAAC,QAAA,gBAAChE,OAAA;YAAOiD,IAAI,EAAC,MAAM;YAACD,KAAK,EAAEmC,SAAU;YAACd,QAAQ,EAAEvB,CAAC,IAAIsC,YAAY,CAACtC,CAAC,CAACI,MAAM,CAACF,KAAK,CAAE;YAACgJ,UAAU,EAAElJ,CAAC,IAAIA,CAAC,CAACmJ,GAAG,KAAK,OAAO,IAAIlC,eAAe,CAAC,CAAE;YAAChG,SAAS,EAAC,mCAAmC;YAACO,WAAW,EAAC,iBAAiB;YAAC4H,QAAQ,EAAEzG;UAAW;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAAApE,OAAA;YAAQyE,OAAO,EAAEsF,eAAgB;YAAChG,SAAS,EAAC,yCAAyC;YAACmI,QAAQ,EAAEzG,UAAW;YAAAzB,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzZ,CACR,EAEAiB,UAAU,KAAK,WAAW,iBACtBrF,OAAA;QAAK+D,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACrChE,OAAA;UAAK+D,SAAS,EAAC,cAAc;UAAAC,QAAA,eAAChE,OAAA;YAAQyE,OAAO,EAAEqG,iBAAkB;YAAC/G,SAAS,EAAC,oFAAoF;YAAAC,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChMpE,OAAA;UAAK+D,SAAS,EAAC,0CAA0C;UAAAC,QAAA,EACpDkC,MAAM,CAACiG,OAAO,CAACtH,SAAS,CAAC,CAACN,GAAG,CAAC,CAAC,CAACxB,IAAI,EAAEiF,IAAI,CAAC,kBACxChI,OAAA,CAACqC,YAAY;YAAYE,YAAY,EAAEQ,IAAK;YAACT,QAAQ,EAAE0F,IAAK;YAACxF,QAAQ,EAAEkI,oBAAqB;YAACjI,QAAQ,EAAEmI;UAAqB,GAAzG7H,IAAI;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuG,CACjI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC,eAENpE,OAAA;MAAK+D,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBAC3DhE,OAAA;QAAK+D,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eAAChE,OAAA;UAAI+D,SAAS,EAAC,qCAAqC;UAAAC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrHpE,OAAA;QAAK+D,SAAS,EAAC,yCAAyC;QAAAC,QAAA,EAAE3C,IAAI,CAACkD,GAAG,CAAC0B,GAAG,iBAAIjG,OAAA;UAAe+D,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAAChE,OAAA;YAAI+D,SAAS,EAAC,sCAAsC;YAAAC,QAAA,EAAEiC;UAAG;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAAC4G,kBAAkB,CAAC/E,GAAG,CAAC;QAAA,GAA7GA,GAAG;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgH,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/M,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACQ,GAAA,CA5YuBD,GAAG;AAAAyH,GAAA,GAAHzH,GAAG;AAAA,IAAAD,EAAA,EAAA0H,GAAA;AAAAC,YAAA,CAAA3H,EAAA;AAAA2H,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}