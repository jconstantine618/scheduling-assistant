{"ast":null,"code":"var _jsxFileName = \"/Users/johnconstantine/scheduling-assistant/src/SchedulerApp.js\",\n  _s = $RefreshSig$();\n// src/SchedulerApp.js\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport './App.css';\n\n// helper to get Sunday→Saturday for any date\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getWeekDates(start) {\n  const week = [];\n  const d = new Date(start);\n  d.setDate(d.getDate() - d.getDay()); // back up to Sunday\n  for (let i = 0; i < 7; i++) {\n    week.push(new Date(d));\n    d.setDate(d.getDate() + 1);\n  }\n  return week;\n}\nconst SchedulerApp = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(function SchedulerApp({\n  initialEmployees,\n  weekStart\n}, ref) {\n  _s();\n  // keep track of our employee array + each day of the week\n  const [employees, setEmployees] = useState(initialEmployees || []);\n  const [weekDates, setWeekDates] = useState(getWeekDates(weekStart || new Date()));\n  useEffect(() => {\n    // whenever weekStart changes, recalc the dates and re-fetch PTO\n    const parsed = weekStart ? new Date(weekStart) : new Date();\n    setWeekDates(getWeekDates(parsed));\n\n    // build ISO start/end for the 7-day window\n    const startISO = parsed.toISOString().split('T')[0];\n    const end = new Date(parsed);\n    end.setDate(end.getDate() + 6);\n    const endISO = end.toISOString().split('T')[0];\n\n    // fetch the calendar events ⇒ { ptoMap: { name: [dateStr…], … } }\n    fetch(`/api/pto-calendar?start=${startISO}&end=${endISO}`).then(res => {\n      if (!res.ok) throw new Error(res.statusText);\n      return res.json();\n    }).then(({\n      ptoMap\n    }) => {\n      // merge new PTO dates into our original array\n      setEmployees(curr => curr.map(emp => ({\n        ...emp,\n        ptoDates: Array.isArray(ptoMap[emp.name]) ? ptoMap[emp.name] : []\n      })));\n    }).catch(err => console.error('Fetch PTO failed:', err));\n  }, [weekStart]);\n\n  // expose two methods to parent via ref\n  useImperativeHandle(ref, () => ({\n    updateEmployeePTOs(ptoMap) {\n      setEmployees(curr => curr.map(emp => ({\n        ...emp,\n        ptoDates: Array.isArray(ptoMap[emp.name]) ? ptoMap[emp.name] : []\n      })));\n    },\n    clearOverrides() {\n      setEmployees(initialEmployees);\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scheduler-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), weekDates.map(d => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: d.toLocaleDateString('en-US', {\n              weekday: 'short',\n              month: 'numeric',\n              day: 'numeric'\n            })\n          }, d.toDateString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: emp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), weekDates.map(d => {\n            const dateStr = d.toISOString().split('T')[0];\n            const hasPTO = Array.isArray(emp.ptoDates) && emp.ptoDates.includes(dateStr);\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              children: hasPTO ? 'PTO' : ''\n            }, dateStr, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 24\n            }, this);\n          })]\n        }, emp.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}, \"qAzBdgYw6joPZilSTfmW3OexJs0=\")), \"qAzBdgYw6joPZilSTfmW3OexJs0=\");\n_c2 = SchedulerApp;\nexport default SchedulerApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"SchedulerApp$forwardRef\");\n$RefreshReg$(_c2, \"SchedulerApp\");","map":{"version":3,"names":["React","useState","useEffect","forwardRef","useImperativeHandle","jsxDEV","_jsxDEV","getWeekDates","start","week","d","Date","setDate","getDate","getDay","i","push","SchedulerApp","_s","_c","initialEmployees","weekStart","ref","employees","setEmployees","weekDates","setWeekDates","parsed","startISO","toISOString","split","end","endISO","fetch","then","res","ok","Error","statusText","json","ptoMap","curr","map","emp","ptoDates","Array","isArray","name","catch","err","console","error","updateEmployeePTOs","clearOverrides","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","month","day","toDateString","dateStr","hasPTO","includes","_c2","$RefreshReg$"],"sources":["/Users/johnconstantine/scheduling-assistant/src/SchedulerApp.js"],"sourcesContent":["// src/SchedulerApp.js\nimport React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport './App.css';\n\n// helper to get Sunday→Saturday for any date\nfunction getWeekDates(start) {\n  const week = [];\n  const d = new Date(start);\n  d.setDate(d.getDate() - d.getDay()); // back up to Sunday\n  for (let i = 0; i < 7; i++) {\n    week.push(new Date(d));\n    d.setDate(d.getDate() + 1);\n  }\n  return week;\n}\n\nconst SchedulerApp = forwardRef(function SchedulerApp({ initialEmployees, weekStart }, ref) {\n  // keep track of our employee array + each day of the week\n  const [employees, setEmployees] = useState(initialEmployees || []);\n  const [weekDates, setWeekDates] = useState(getWeekDates(weekStart || new Date()));\n\n  useEffect(() => {\n    // whenever weekStart changes, recalc the dates and re-fetch PTO\n    const parsed = weekStart ? new Date(weekStart) : new Date();\n    setWeekDates(getWeekDates(parsed));\n\n    // build ISO start/end for the 7-day window\n    const startISO = parsed.toISOString().split('T')[0];\n    const end = new Date(parsed);\n    end.setDate(end.getDate() + 6);\n    const endISO = end.toISOString().split('T')[0];\n\n    // fetch the calendar events ⇒ { ptoMap: { name: [dateStr…], … } }\n    fetch(`/api/pto-calendar?start=${startISO}&end=${endISO}`)\n      .then(res => {\n        if (!res.ok) throw new Error(res.statusText);\n        return res.json();\n      })\n      .then(({ ptoMap }) => {\n        // merge new PTO dates into our original array\n        setEmployees(curr =>\n          curr.map(emp => ({\n            ...emp,\n            ptoDates: Array.isArray(ptoMap[emp.name]) ? ptoMap[emp.name] : []\n          }))\n        );\n      })\n      .catch(err => console.error('Fetch PTO failed:', err));\n  }, [weekStart]);\n\n  // expose two methods to parent via ref\n  useImperativeHandle(ref, () => ({\n    updateEmployeePTOs(ptoMap) {\n      setEmployees(curr =>\n        curr.map(emp => ({\n          ...emp,\n          ptoDates: Array.isArray(ptoMap[emp.name]) ? ptoMap[emp.name] : []\n        }))\n      );\n    },\n    clearOverrides() {\n      setEmployees(initialEmployees);\n    }\n  }));\n\n  return (\n    <div className=\"scheduler-panel\">\n      <table>\n        <thead>\n          <tr>\n            <th>Employee</th>\n            {weekDates.map(d => (\n              <th key={d.toDateString()}>\n                {d.toLocaleDateString('en-US', {\n                  weekday: 'short',\n                  month: 'numeric',\n                  day: 'numeric'\n                })}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {employees.map(emp => (\n            <tr key={emp.name}>\n              <td>{emp.name}</td>\n              {weekDates.map(d => {\n                const dateStr = d.toISOString().split('T')[0];\n                const hasPTO = Array.isArray(emp.ptoDates) && emp.ptoDates.includes(dateStr);\n                return <td key={dateStr}>{hasPTO ? 'PTO' : ''}</td>;\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\nexport default SchedulerApp;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}